@model Web.Models.ProdutoModel
@{
    ViewData["Title"] = "Adicionar Produto";
    Layout = "~/Views/Shared/_LayoutLogado.cshtml";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-plus-circle me-2"></i>
                        <h4 class="mb-0">Adicionar Novo Produto</h4>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-action="Adicionar" method="post" novalidate>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <label asp-for="Nome" class="form-label">
                                    <i class="bi bi-tag me-1"></i>Nome do Produto
                                </label>
                                <input asp-for="Nome" class="form-control @(ViewData.ModelState["Nome"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                                       placeholder="Digite o nome do produto" />
                                <span asp-validation-for="Nome" class="invalid-feedback"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="Valor" class="form-label">
                                    <i class="bi bi-currency-dollar me-1"></i>Valor (R$)
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">R$</span>
                                    <input asp-for="Valor" type="number" step="0.01" min="0.01" 
                                           class="form-control @(ViewData.ModelState["Valor"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                                           placeholder="0,00" />
                                </div>
                                <span asp-validation-for="Valor" class="invalid-feedback"></span>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label asp-for="QuantidadeEstoque" class="form-label">
                                    <i class="bi bi-boxes me-1"></i>Quantidade em Estoque
                                </label>
                                <input asp-for="QuantidadeEstoque" type="number" min="0" 
                                       class="form-control @(ViewData.ModelState["QuantidadeEstoque"]?.Errors.Count > 0 ? "is-invalid" : "")" 
                                       placeholder="0" />
                                <span asp-validation-for="QuantidadeEstoque" class="invalid-feedback"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <div class="d-flex justify-content-between">
                                    <a asp-action="Index" class="btn btn-secondary">
                                        <i class="bi bi-arrow-left me-1"></i>Voltar
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-check-circle me-1"></i>Salvar Produto
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Card de Informações -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-info-circle me-2"></i>Informações Importantes
                    </h6>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li class="mb-2">
                            <i class="bi bi-check-circle text-success me-2"></i>
                            <strong>Nome:</strong> Deve ter entre 1 e 100 caracteres
                        </li>
                        <li class="mb-2">
                            <i class="bi bi-check-circle text-success me-2"></i>
                            <strong>Valor:</strong> Deve ser maior que R$ 0,00
                        </li>
                        <li class="mb-0">
                            <i class="bi bi-check-circle text-success me-2"></i>
                            <strong>Estoque:</strong> Quantidade inicial em estoque (pode ser zero)
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Formatação do campo de valor
            $('#Valor').on('input', function() {
                let value = $(this).val();
                if (value && !isNaN(value)) {
                    $(this).val(parseFloat(value).toFixed(2));
                }
            });

            // Validação em tempo real
            $('form').on('submit', function(e) {
                let isValid = true;
                
                // Validar nome
                if ($('#Nome').val().trim() === '') {
                    $('#Nome').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#Nome').removeClass('is-invalid');
                }
                
                // Validar valor
                let valor = parseFloat($('#Valor').val());
                if (isNaN(valor) || valor <= 0) {
                    $('#Valor').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#Valor').removeClass('is-invalid');
                }
                
                // Validar quantidade
                let quantidade = parseInt($('#QuantidadeEstoque').val());
                if (isNaN(quantidade) || quantidade < 0) {
                    $('#QuantidadeEstoque').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#QuantidadeEstoque').removeClass('is-invalid');
                }
                
                if (!isValid) {
                    e.preventDefault();
                    $('html, body').animate({
                        scrollTop: $('.is-invalid').first().offset().top - 100
                    }, 500);
                }
            });
        });
    </script>
}
